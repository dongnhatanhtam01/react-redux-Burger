{"version":3,"sources":["logo.svg","components/ReduxHamberger/BaiTapHamberger.jsx","App.js","reportWebVitals.js","redux/BurgerReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["BaiTapHamberger","renderMenuHandler","props","menu","burger","Object","entries","map","index","varKey","varValue","className","onClick","addBreadMid","renderBreadMidHandler","content","propsBurger","breadMid","i","push","console","log","this","colSpan","total","Component","connect","state","BurgerReducer","dispatch","amount","type","App","style","display","height","src","logo","alt","Date","toLocaleString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","burgerState","salad","cheese","beef","rootReducer","combineReducers","action","burgerUpDate","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.769baa71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// css\r\nimport \"./hamberger.css\";\r\nclass BaiTapHamberger extends Component {\r\n  renderMenuHandler = () => {\r\n    let { menu, burger } = this.props;\r\n    return Object.entries(menu).map(([varKey, varValue], index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{varKey}</td>\r\n          <td>\r\n            <button className=\"btn btn-danger m-2\" onClick={()=>this.props.addBreadMid(varKey, -1)}>-</button>\r\n            {burger[varKey]}\r\n            <button className=\"btn btn-success m-2\" onClick={()=>this.props.addBreadMid(varKey, 1)}>+</button>\r\n          </td>\r\n          <td>{varValue}</td>\r\n          <td>{burger[varKey] * varValue}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  renderBreadMidHandler = () => {\r\n    // console.log(this.props.burger);\r\n    // ky thuat duyet object\r\n    let { burger } = this.props;\r\n    let content = [];\r\n    for (let propsBurger in burger) {\r\n      let breadMid = [];\r\n      for (let i = 0; i < burger[propsBurger]; i++) {\r\n        breadMid.push(<div className={propsBurger} key={i}></div>);\r\n      }\r\n      content.push(breadMid);\r\n    }\r\n    return content;\r\n    // return Object.entries(burger).map(([var1_key, var2_value], index) =>{\r\n    //     console.log(var1_key, var2_value);\r\n\r\n    //     let breadMidArray =[];\r\n    //     for (let i = 0; i< var2_value; i++){\r\n    //         breadMidArray.push(<div key={i} className={var1_key}></div>)\r\n    //     }\r\n    //     return (\r\n    //         breadMidArray\r\n    //     )\r\n    // })\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"display-4 text-success\">Bài Tập Hamberger CyberSoft</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h3 className=\"text-center text-danger\">Bánh burger của bạn!</h3>\r\n            <div className=\"breadTop\"></div>\r\n            {this.renderBreadMidHandler()}\r\n            <div className=\"breadBottom\"></div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <td>Thức ăn</td>\r\n                <td></td>\r\n                <td>Giá</td>\r\n                <td>Thành Tiền:</td>\r\n              </thead>\r\n              <tbody>{this.renderMenuHandler()}</tbody>\r\n              <tfoot>\r\n                <td colSpan=\"2\"></td>\r\n                <td>Tổng tiền</td>\r\n                <td>{this.props.total}</td>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addBreadMid: (propsBurger, amount) => {\r\n      const action = {\r\n        type: \"ADD_BREAD_MID\",\r\n        propsBurger,\r\n        amount,\r\n      };\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    burger: state.BurgerReducer.burger,\r\n    menu: state.BurgerReducer.menu,\r\n    total: state.BurgerReducer.total,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BaiTapHamberger);\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport BaiTapHamberger from \"./components/ReduxHamberger/BaiTapHamberger\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display: 'flex', height: '100%'}}>\n      <div className=\"col-3\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h3>{new Date().toLocaleString()}</h3>\n        </header>\n      </div>\n      <div className=\"col-9\">\n        <BaiTapHamberger></BaiTapHamberger>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const burgerState={\r\n    burger: {salad:1,cheese: 1, beef: 1}, //[{name: \"salad\", amount: 1}, {name:\"cheese\", amount: 1},{name: \"beef\", amount: 1}]\r\n    menu: {salad: 10, cheese: 20, beef: 55},\r\n    total: 85\r\n}\r\n\r\nexport const BurgerReducer =(state= burgerState,action) => {\r\n    console.log(\"redux\",action);\r\n    switch (action.type) {\r\n        case 'ADD_BREAD_MID':\r\n            let {propsBurger, amount} = action;\r\n            let burgerUpDate = {...state.burger};\r\n            if(amount===-1 && state.burger[propsBurger]<1) {\r\n                return {...state}\r\n            }\r\n            burgerUpDate[propsBurger] +=amount;\r\n            state.burger=burgerUpDate;\r\n            state.total +=amount*state.menu[propsBurger];\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return {...state}\r\n}","import {combineReducers} from 'redux'\r\nimport {BurgerReducer} from './BurgerReducer'\r\n\r\n// create general store\r\nexport const rootReducer = combineReducers({\r\n    // combine all of reducer inside it\r\n    BurgerReducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//set up redux\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nsetInterval(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n}, 1000);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}